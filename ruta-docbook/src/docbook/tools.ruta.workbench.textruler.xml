<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"[
<!ENTITY imgroot "images/tools/ruta/workbench/" >
<!ENTITY % uimaents SYSTEM "../../target/docbook-shared/entities.ent" >  
%uimaents;
]>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<section id="section.tools.ruta.workbench.textruler">
  <title>TextRuler</title>
  <para>
    Apache UIMA Ruta TextRuler is a framework for supervised rule induction included in the UIMA Ruta Workbench. 
    It provides several configurable algorithms, which are able to learn new rules based on given labeled data.
    The framework was created in order to support the user by suggesting new rules for the given task. 
    The user selects a suitable learning algorithm and adapts its configuration parameters. Furthermore, 
    the user engineers a set of annotation-based features, which enable the algorithms to form efficient, effective and comprehensive rules.
    The rule learning algorithms present their suggested rules in a new view, in which the user can either copy 
    the complete script or single rules to a new script file, where the rules can be further refined.
  </para>
  <para>
    This section gives a short introduction about the included features and learners, and how to use the framework to learn UIMA Ruta rules. First, the 
    available rule learning algorithms are introduced in <xref linkend="section.tools.ruta.workbench.textruler.learner"/>. Then, 
    the user interface and the usage is explained in <xref linkend="section.tools.ruta.workbench.textruler.ui"/> using an exemplary UIMA Ruat project.
  </para>
   <section id="section.tools.ruta.workbench.textruler.learner">
    <title>Included rule learning algorithms</title>
    <para>
      This section gives a short description of the rule learning algorithms,
      which are provided in the UIMA Ruta TextRuler framework.
      </para>
      <section id="section.tools.ruta.workbench.textruler.lp2">
      <title>LP2</title>
      <note>
      <para>
        This rule learner is an experimental implementation of the ideas and algorithms published in:
        F. Ciravegna. (LP)2, Rule Induction for Information Extraction Using Linguistic
        Constraints. Technical Report CS-03-07, Department of Computer Science, University of
        Sheffield, Sheffield, 2003.
      </para>
      </note>
      <para>This algorithms learns separate rules for
        the beginning and the end of a single slot, which are later combined 
        in order to identify the targeted annotation. The learning strategy is a bottom-up covering
        algorithm. It starts by creating a specific seed instance with a window of w tokens to the
        left and right of the target boundary and searches for the best generalization. Additional context rules are
        induced in order to identify missing boundaries. The current implementation does not support correction rules.
        The TextRuler framework provides two versions of this algorithm: LP2 (naive) is a straightforward implementation
        with limited expressiveness concerning the resulting Ruta rules. LP2 (optimized) is an improved 
        version with a dynamic programming approach and is providing better results in general.
        The following parameters are available. For a more detailed description of the parameters, 
        please refer to the implementation and the publication.
      </para>
      <para>
      <itemizedlist>
        <listitem>
          <para>Context Window Size (to the left and right)</para>
        </listitem>
        <listitem>
          <para>Best Rules List Size</para>
        </listitem>
        <listitem>
          <para>Minimum Covered Positives per Rule</para>
        </listitem>
        <listitem>
          <para>Maximum Error Threshold</para>
        </listitem>
        <listitem>
          <para>Contextual Rules List Size</para>
        </listitem>
      </itemizedlist>
      </para>
    </section>
    
    <section id="section.tools.ruta.workbench.textruler.whisk">
      <title>WHISK</title>
      <note>
      <para>
        This rule learner is an experimental implementation of the ideas and algorithms published in:
        Stephen Soderland, Claire Cardie, and Raymond Mooney. Learning Information
        Extraction Rules for Semi-Structured and Free Text. In Machine Learning, volume 34,
        pages 233-272, 1999.
      </para>
      </note>
      <para>WHISK is a multi-slot method that operates on all three kinds of documents and learns
        single- or multi-slot rules looking similar to regular expressions. However, the current implementation only support single slot rules.
        The top-down covering algorithm begins with the most general rule and specializes it by adding single rule terms
        until the rule does not make errors anymore on the training set. The TextRuler framework provides two versions of this algorithm:
        WHISK (token) is a naive token-based implementation. WHISK (generic) is an optimized and improved implementation, 
        which is able to refer to arbitrary annotations and also supports primitive features. The following parameters are available. For a more detailed description of the parameters, 
        please refer to the implementation and the publication.
        </para>
      <para>
      <itemizedlist>
        <listitem>
          <para>Parameters Window Size</para>
        </listitem>
        <listitem>
          <para>Maximum Error Threshold</para>
        </listitem>
        <listitem>
          <para>PosTag Root Type</para>
        </listitem>
        <listitem>
          <para>Considered Features (comma-separated) - only WHISK (generic)</para>
        </listitem>
      </itemizedlist>
      </para>
    </section>  
  </section>  
   <section id="section.tools.ruta.workbench.textruler.ui">
   <title>The TextRuler view</title>
      <para> 
      </para>
      <figure id="figure.tools.ruta.workbench.textruler.main">
      <title>The UIMA Ruta TextRuler framework
      </title>
      <mediaobject>
        <imageobject role="html">
          <imagedata width="776px" format="PNG" align="center"
            fileref="&imgroot;textruler/textruler.png" />
        </imageobject>
        <imageobject role="fo">
          <imagedata width="5.4in" format="PNG" align="center"
            fileref="&imgroot;textruler/textruler.png" />
        </imageobject>
        <textobject>
          <phrase>UIMA Ruta TextRuler framework</phrase>
        </textobject>
      </mediaobject>
    </figure>
    <figure id="figure.tools.ruta.workbench.textruler.pref">
      <title>The UIMA Ruta TextRuler Preferences
      </title>
      <mediaobject>
        <imageobject role="html">
          <imagedata width="576px" format="PNG" align="center"
            fileref="&imgroot;textruler/textruler_pref.png" />
        </imageobject>
        <imageobject role="fo">
          <imagedata width="3.3in" format="PNG" align="center"
            fileref="&imgroot;textruler/textruler_pref.png" />
        </imageobject>
        <textobject>
          <phrase>UIMA Ruta TextRuler Preferences</phrase>
        </textobject>
      </mediaobject>
    </figure>
    
   </section>
</section>
